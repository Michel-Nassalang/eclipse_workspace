/**
 * generated by Xtext 2.30.0
 */
package org.xtext.ipsl.figure.figure.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.ipsl.figure.figure.FigureFactory;
import org.xtext.ipsl.figure.figure.FigurePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class FigurePackageImpl extends EPackageImpl implements FigurePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass programmeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass figureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass carreEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rectangleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cercleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass returnEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass reelEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.ipsl.figure.figure.FigurePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private FigurePackageImpl()
  {
    super(eNS_URI, FigureFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link FigurePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static FigurePackage init()
  {
    if (isInited) return (FigurePackage)EPackage.Registry.INSTANCE.getEPackage(FigurePackage.eNS_URI);

    // Obtain or create and register package
    Object registeredFigurePackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    FigurePackageImpl theFigurePackage = registeredFigurePackage instanceof FigurePackageImpl ? (FigurePackageImpl)registeredFigurePackage : new FigurePackageImpl();

    isInited = true;

    // Create package meta-data objects
    theFigurePackage.createPackageContents();

    // Initialize created meta-data
    theFigurePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theFigurePackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(FigurePackage.eNS_URI, theFigurePackage);
    return theFigurePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPROGRAMME()
  {
    return programmeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPROGRAMME_Fig()
  {
    return (EReference)programmeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFIGURE()
  {
    return figureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFIGURE_Nom()
  {
    return (EReference)figureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCARRE()
  {
    return carreEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCARRE_Nom()
  {
    return (EAttribute)carreEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCARRE_Debut()
  {
    return (EAttribute)carreEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCARRE_Cote()
  {
    return (EReference)carreEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCARRE_Retour()
  {
    return (EReference)carreEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCARRE_End()
  {
    return (EAttribute)carreEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRECTANGLE()
  {
    return rectangleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRECTANGLE_Nom()
  {
    return (EAttribute)rectangleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRECTANGLE_Debut()
  {
    return (EAttribute)rectangleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRECTANGLE_Longueur()
  {
    return (EReference)rectangleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRECTANGLE_Largeur()
  {
    return (EReference)rectangleEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRECTANGLE_Retour()
  {
    return (EReference)rectangleEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRECTANGLE_End()
  {
    return (EAttribute)rectangleEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCERCLE()
  {
    return cercleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCERCLE_Nom()
  {
    return (EAttribute)cercleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCERCLE_Debut()
  {
    return (EAttribute)cercleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCERCLE_Rayon()
  {
    return (EReference)cercleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCERCLE_Retour()
  {
    return (EReference)cercleEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCERCLE_End()
  {
    return (EAttribute)cercleEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRETURN()
  {
    return returnEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRETURN_Resultat()
  {
    return (EAttribute)returnEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getREEL()
  {
    return reelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getREEL_Reel()
  {
    return (EAttribute)reelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FigureFactory getFigureFactory()
  {
    return (FigureFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    programmeEClass = createEClass(PROGRAMME);
    createEReference(programmeEClass, PROGRAMME__FIG);

    figureEClass = createEClass(FIGURE);
    createEReference(figureEClass, FIGURE__NOM);

    carreEClass = createEClass(CARRE);
    createEAttribute(carreEClass, CARRE__NOM);
    createEAttribute(carreEClass, CARRE__DEBUT);
    createEReference(carreEClass, CARRE__COTE);
    createEReference(carreEClass, CARRE__RETOUR);
    createEAttribute(carreEClass, CARRE__END);

    rectangleEClass = createEClass(RECTANGLE);
    createEAttribute(rectangleEClass, RECTANGLE__NOM);
    createEAttribute(rectangleEClass, RECTANGLE__DEBUT);
    createEReference(rectangleEClass, RECTANGLE__LONGUEUR);
    createEReference(rectangleEClass, RECTANGLE__LARGEUR);
    createEReference(rectangleEClass, RECTANGLE__RETOUR);
    createEAttribute(rectangleEClass, RECTANGLE__END);

    cercleEClass = createEClass(CERCLE);
    createEAttribute(cercleEClass, CERCLE__NOM);
    createEAttribute(cercleEClass, CERCLE__DEBUT);
    createEReference(cercleEClass, CERCLE__RAYON);
    createEReference(cercleEClass, CERCLE__RETOUR);
    createEAttribute(cercleEClass, CERCLE__END);

    returnEClass = createEClass(RETURN);
    createEAttribute(returnEClass, RETURN__RESULTAT);

    reelEClass = createEClass(REEL);
    createEAttribute(reelEClass, REEL__REEL);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(programmeEClass, org.xtext.ipsl.figure.figure.PROGRAMME.class, "PROGRAMME", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPROGRAMME_Fig(), this.getFIGURE(), null, "fig", null, 0, 1, org.xtext.ipsl.figure.figure.PROGRAMME.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(figureEClass, org.xtext.ipsl.figure.figure.FIGURE.class, "FIGURE", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFIGURE_Nom(), ecorePackage.getEObject(), null, "nom", null, 0, 1, org.xtext.ipsl.figure.figure.FIGURE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(carreEClass, org.xtext.ipsl.figure.figure.CARRE.class, "CARRE", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCARRE_Nom(), ecorePackage.getEString(), "nom", null, 0, 1, org.xtext.ipsl.figure.figure.CARRE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCARRE_Debut(), ecorePackage.getEString(), "debut", null, 0, 1, org.xtext.ipsl.figure.figure.CARRE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCARRE_Cote(), this.getREEL(), null, "cote", null, 0, 1, org.xtext.ipsl.figure.figure.CARRE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCARRE_Retour(), this.getRETURN(), null, "retour", null, 0, 1, org.xtext.ipsl.figure.figure.CARRE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCARRE_End(), ecorePackage.getEString(), "end", null, 0, 1, org.xtext.ipsl.figure.figure.CARRE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rectangleEClass, org.xtext.ipsl.figure.figure.RECTANGLE.class, "RECTANGLE", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRECTANGLE_Nom(), ecorePackage.getEString(), "nom", null, 0, 1, org.xtext.ipsl.figure.figure.RECTANGLE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRECTANGLE_Debut(), ecorePackage.getEString(), "debut", null, 0, 1, org.xtext.ipsl.figure.figure.RECTANGLE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRECTANGLE_Longueur(), this.getREEL(), null, "longueur", null, 0, 1, org.xtext.ipsl.figure.figure.RECTANGLE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRECTANGLE_Largeur(), this.getREEL(), null, "largeur", null, 0, 1, org.xtext.ipsl.figure.figure.RECTANGLE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRECTANGLE_Retour(), this.getRETURN(), null, "retour", null, 0, 1, org.xtext.ipsl.figure.figure.RECTANGLE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRECTANGLE_End(), ecorePackage.getEString(), "end", null, 0, 1, org.xtext.ipsl.figure.figure.RECTANGLE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cercleEClass, org.xtext.ipsl.figure.figure.CERCLE.class, "CERCLE", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCERCLE_Nom(), ecorePackage.getEString(), "nom", null, 0, 1, org.xtext.ipsl.figure.figure.CERCLE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCERCLE_Debut(), ecorePackage.getEString(), "debut", null, 0, 1, org.xtext.ipsl.figure.figure.CERCLE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCERCLE_Rayon(), this.getREEL(), null, "rayon", null, 0, 1, org.xtext.ipsl.figure.figure.CERCLE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCERCLE_Retour(), this.getRETURN(), null, "retour", null, 0, 1, org.xtext.ipsl.figure.figure.CERCLE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCERCLE_End(), ecorePackage.getEString(), "end", null, 0, 1, org.xtext.ipsl.figure.figure.CERCLE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(returnEClass, org.xtext.ipsl.figure.figure.RETURN.class, "RETURN", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRETURN_Resultat(), ecorePackage.getEString(), "resultat", null, 0, 1, org.xtext.ipsl.figure.figure.RETURN.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(reelEClass, org.xtext.ipsl.figure.figure.REEL.class, "REEL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getREEL_Reel(), ecorePackage.getEDouble(), "reel", null, 0, 1, org.xtext.ipsl.figure.figure.REEL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //FigurePackageImpl
