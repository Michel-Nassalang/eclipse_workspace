/**
 * generated by Xtext 2.30.0
 */
package org.xtext.ipsl.figure.figure.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.ipsl.figure.figure.FigurePackage;
import org.xtext.ipsl.figure.figure.REEL;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>REEL</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.ipsl.figure.figure.impl.REELImpl#getReel <em>Reel</em>}</li>
 * </ul>
 *
 * @generated
 */
public class REELImpl extends MinimalEObjectImpl.Container implements REEL
{
  /**
   * The default value of the '{@link #getReel() <em>Reel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReel()
   * @generated
   * @ordered
   */
  protected static final double REEL_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getReel() <em>Reel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReel()
   * @generated
   * @ordered
   */
  protected double reel = REEL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected REELImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FigurePackage.Literals.REEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getReel()
  {
    return reel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReel(double newReel)
  {
    double oldReel = reel;
    reel = newReel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FigurePackage.REEL__REEL, oldReel, reel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FigurePackage.REEL__REEL:
        return getReel();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FigurePackage.REEL__REEL:
        setReel((Double)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FigurePackage.REEL__REEL:
        setReel(REEL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FigurePackage.REEL__REEL:
        return reel != REEL_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (reel: ");
    result.append(reel);
    result.append(')');
    return result.toString();
  }

} //REELImpl
