/**
 * generated by Xtext 2.30.0
 */
package org.xtext.ipsl.figure.figure.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.ipsl.figure.figure.FIGURE;
import org.xtext.ipsl.figure.figure.FigurePackage;
import org.xtext.ipsl.figure.figure.PROGRAMME;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>PROGRAMME</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.ipsl.figure.figure.impl.PROGRAMMEImpl#getFig <em>Fig</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PROGRAMMEImpl extends MinimalEObjectImpl.Container implements PROGRAMME
{
  /**
   * The cached value of the '{@link #getFig() <em>Fig</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFig()
   * @generated
   * @ordered
   */
  protected FIGURE fig;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PROGRAMMEImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FigurePackage.Literals.PROGRAMME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FIGURE getFig()
  {
    return fig;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFig(FIGURE newFig, NotificationChain msgs)
  {
    FIGURE oldFig = fig;
    fig = newFig;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FigurePackage.PROGRAMME__FIG, oldFig, newFig);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFig(FIGURE newFig)
  {
    if (newFig != fig)
    {
      NotificationChain msgs = null;
      if (fig != null)
        msgs = ((InternalEObject)fig).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FigurePackage.PROGRAMME__FIG, null, msgs);
      if (newFig != null)
        msgs = ((InternalEObject)newFig).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FigurePackage.PROGRAMME__FIG, null, msgs);
      msgs = basicSetFig(newFig, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FigurePackage.PROGRAMME__FIG, newFig, newFig));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FigurePackage.PROGRAMME__FIG:
        return basicSetFig(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FigurePackage.PROGRAMME__FIG:
        return getFig();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FigurePackage.PROGRAMME__FIG:
        setFig((FIGURE)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FigurePackage.PROGRAMME__FIG:
        setFig((FIGURE)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FigurePackage.PROGRAMME__FIG:
        return fig != null;
    }
    return super.eIsSet(featureID);
  }

} //PROGRAMMEImpl
