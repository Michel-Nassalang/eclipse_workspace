<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;testify&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Original element: &apos;sipix.assasin.java&apos;" description="Delete element" element1="/src&lt;sipix{assasin.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1629811367592" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;sipix.Assasin.nom&apos; in &apos;sipix.Assasin&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Original element: &apos;sipix.Assasin.nom&apos;&#x0D;&#x0A;- Getter method name: &apos;getNom&apos;&#x0D;&#x0A;- Setter method name: &apos;setNom&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;nom&apos;" flags="589830" getter="getNom" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;sipix{Assasin.java[Assasin^nom" insertion="0" setter="setNom" stamp="1629812019126" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;sipix.Assasin.force&apos; in &apos;sipix.Assasin&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Original element: &apos;sipix.Assasin.force&apos;&#x0D;&#x0A;- Getter method name: &apos;getForce&apos;&#x0D;&#x0A;- Setter method name: &apos;setForce&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;force&apos;" flags="589830" getter="getForce" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;sipix{Assasin.java[Assasin^force" insertion="2" setter="setForce" stamp="1629812098645" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;sipix.Assasin.sante&apos; in &apos;sipix.Assasin&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Original element: &apos;sipix.Assasin.sante&apos;&#x0D;&#x0A;- Getter method name: &apos;getSante&apos;&#x0D;&#x0A;- Setter method name: &apos;setSante&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;sante&apos;" flags="589830" getter="getSante" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;sipix{Assasin.java[Assasin^sante" insertion="4" setter="setSante" stamp="1629812107135" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;sipix.Assasin.gilet&apos; in &apos;sipix.Assasin&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Original element: &apos;sipix.Assasin.gilet&apos;&#x0D;&#x0A;- Getter method name: &apos;getGilet&apos;&#x0D;&#x0A;- Setter method name: &apos;setGilet&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;gilet&apos;" flags="589830" getter="getGilet" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;sipix{Assasin.java[Assasin^gilet" insertion="6" setter="setGilet" stamp="1629812113887" version="1.0" visibility="1"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;testify&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     heritage.Tdynamique.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;heritage{Tdynamique.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1629852872234" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;Tdynamique.java&apos; to &apos;sipix.main.java&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Destination element: &apos;sipix.main.java&apos;&#x0D;&#x0A;- Original element: &apos;heritage.Tdynamique.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;sipix{main.java" element1="/src&lt;heritage{Tdynamique.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1629895589914" units="1" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;HashMaps.java&apos; to &apos;sipix.tableaux.java&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Destination element: &apos;sipix.tableaux.java&apos;&#x0D;&#x0A;- Original element: &apos;heritage.HashMaps.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;sipix{tableaux.java" element1="/src&lt;heritage{HashMaps.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1629895602885" units="1" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;testify&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Original element: &apos;sipix.test.java&apos;" description="Delete element" element1="/src&lt;sipix{test.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1629946137159" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;testify&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Original element: &apos;sipix.Langune.java&apos;" description="Delete element" element1="/src&lt;sipix{Langune.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1629946159909" subPackages="false" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;testify&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     Brain.Alphabet.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;Brain{Alphabet.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1630028595759" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;testify&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Original element: &apos;Brain.affirmations.java&apos;" description="Delete element" element1="/src&lt;Brain{affirmations.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1630033828077" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;testify&apos;&#x0D;&#x0A;- Original project: &apos;testify&apos;&#x0D;&#x0A;- Original element: &apos;Brain.Informations.java&apos;" description="Delete element" element1="/src&lt;Brain{Informations.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1630034113394" subPackages="false" version="1.0"/>
</session>