/**
 * generated by Xtext 2.29.0
 */
package org.xtext.ipsl.calcul.calcul.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.ipsl.calcul.calcul.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class CalculFactoryImpl extends EFactoryImpl implements CalculFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static CalculFactory init()
  {
    try
    {
      CalculFactory theCalculFactory = (CalculFactory)EPackage.Registry.INSTANCE.getEFactory(CalculPackage.eNS_URI);
      if (theCalculFactory != null)
      {
        return theCalculFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new CalculFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CalculFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case CalculPackage.CALCUL: return createCALCUL();
      case CalculPackage.STATISTIQUE: return createSTATISTIQUE();
      case CalculPackage.MODALITE: return createMODALITE();
      case CalculPackage.EFFECTIF: return createEFFECTIF();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CALCUL createCALCUL()
  {
    CALCULImpl calcul = new CALCULImpl();
    return calcul;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public STATISTIQUE createSTATISTIQUE()
  {
    STATISTIQUEImpl statistique = new STATISTIQUEImpl();
    return statistique;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MODALITE createMODALITE()
  {
    MODALITEImpl modalite = new MODALITEImpl();
    return modalite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EFFECTIF createEFFECTIF()
  {
    EFFECTIFImpl effectif = new EFFECTIFImpl();
    return effectif;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CalculPackage getCalculPackage()
  {
    return (CalculPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static CalculPackage getPackage()
  {
    return CalculPackage.eINSTANCE;
  }

} //CalculFactoryImpl
